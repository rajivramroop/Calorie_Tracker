import { StatusBar } from 'expo-status-bar';
import { StyleSheet, Text, View } from 'react-native';
import React, { useState, useEffect } from 'react';
import { BarCodeScanner } from 'expo-barcode-scanner';

export default function App() {
  
   const [hasPermission, setHasPermission] = useState(null);
   const [scanned, setScanned] = useState(false);
   <Text>To share a photo from your phone with a friend, just press the button below!</Text>
 
   useEffect(() => {
     (async () => {
       const { status } = await BarCodeScanner.requestPermissionsAsync();
       setHasPermission(status === 'granted');
     })();
   }, []);
 
   const handleBarCodeScanned = ({ type, data }) => {
     setScanned(true);
     alert(`Bar code with type ${type} and data ${data} has been scanned!`);
   };
 
   if (hasPermission === null) {
     return <Text>Requesting for camera permission</Text>;
   }
   if (hasPermission === false) {
     return <Text>No access to camera</Text>;
   }
   fetch('https://api.nal.usda.gov/fdc/v1/foods/search?query=apple&pageSize=2&api_key=oJ6XRfAOLdCZmqcsH5joeGxnIdkerDtfJshjaulU', {
    method: 'POST',
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      firstParam: 'yourValue'
      
    })
  });
  const getArticlesFromApi = async () => {
    let response = await fetch(
      'https://api.nal.usda.gov/fdc/v1/foods/search?query=apple&pageSize=2&api_key=oJ6XRfAOLdCZmqcsH5joeGxnIdkerDtfJshjaulU'
    );
    let json = await response.json();
    return json.movies;
  }
};
const getArticlesFromApi = async () => {
  try {
    let response = await fetch(
      'https://api.nal.usda.gov/fdc/v1/foods/search?query=apple&pageSize=2&api_key=oJ6XRfAOLdCZmqcsH5joeGxnIdkerDtfJshjaulU'
    );
    let json = await response.json();
    return json.movies;
  } catch (error) {
     console.error(error);
  }
};
   return (
     <View style={styles.container}>
       <BarCodeScanner
         onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}
         style={StyleSheet.absoluteFillObject}
       />
       {scanned && <Button title={'Tap to Scan Again'} onPress={() => setScanned(false)} />}
     </View>
      
     
   );
 

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});
